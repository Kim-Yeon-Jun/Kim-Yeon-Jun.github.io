---
layout: post
title:  "감정분석과 토픽 모델링"
---

# Sentiment, Topic

<감정분석>
감성분석(Sentiment Analysis)
주관적인 감성/의견/감정/기분 등을 파악하기 위한 방법

지도 학습 기반 : 학습 데이터와 레이블 값을 기반으로 감성 분석 학습을 수행한 뒤 이를 기반으로 다른 데이터의 감성 분석을 예측
감성 어휘 사전 : 감성 분석을 위한 용어와 문맥에 대한 다양한 정보를 가지고 있음. 이를 통해 문서의 긍/부정 판단(단어, 문맥을 기반으로 감성 수치를 계산)

실습 : IMDB의 영화 리뷰에 대한 긍/부정 예측

감성 어휘 사전 
-SentiWordNet : NLTK 패키지의 WordNet과 유사하게 감성 단어 전용의 WordNet을 구현한 것. Synset별로 3가지 감성 점수를 할당
                     긍정 감성 지수, 부정 감성 지수, 객관성 지수.
                     1) 문서를 문장 단위로 분해
                     2) 문장을 단어 단위로 토큰화 & 품사 태깅(POS)
                     3) 품사 태킹된 단어를 기반으로 synset 객체와 senti_synset 객체를 생성
                     4) Senti_synset에서 긍정/부정 감성 지수를 구하고 이를 합산해 임계치 값 이상일 때 긍정, 아니라면 부정으로 결정
-VADER : 주로 소셜 미디어의 텍스트에 대한 감성 분석을 제공하기 위한 패키지.
                     1) SentimentIntensityAnalyzer 클래스(객체)를 이용
                     2) 객체 생성 후 문서별로 polarity_scores() 메서드를 호출하여 감성 점수를 구함. 임계치 값 이상이면 긍정, 아니면 부정 
                     3) neg : 부정 감성 지수, neu : 중립 감성 지수, pos : 긍정 감성 지수, compound : 앞의 3개의 점수를 적절히 조합하여 -1~1 사이의 감성지수를 표현한 값
                     4) compound score를 깁나으로 긍정/부정 감성 여부 결정. 보통 0.1을 임계치 값으로 사용.(조절 가능)
-Pattern : 예측 성능 측면에서 성능이 좋은 패키지

<토픽 모델링>
문서들에 잠재되어 있는 공통된 주제들을 추출해내는 기법
문서들이 가지는 주요 토픽의 분포도와 개별 토픽이 어떤 의미인지(단어들의 분포)를 제공함.
토픽 모델링 알고리즘 유형
-LSA(Latent Semantic Analysis), pLSA
-LDA(Latent Dirichlet Allocation)
-NMF(Non Negative Factorization)
LSA, NMF = 행렬 분해 기반(SVD) 토픽 모델링
pLSA, LDA = 확률 기반의 토픽 모델링
(공통사항 : 개별 문서는 혼합된 여러개의 주제로 구성되어 있다. 개별 주제는 여러개의 단어로 구성되어 있다. 는 2개의 가정을 가짐)

<LDA>
Document-Term 행렬 => 베이즈 추론 => (문서별 토픽 분포, 토픽별 단어 분포)
관찰된 문서내 단어들을 이용하여 베이즈 추론을 통해 문서내 토픽 분포와 토픽별 단어 분포를 추론하는 방식
LDA 베이즈 추론의 사전 확률분포로 사용되는 것이 디리클레 분포(Dirichlet Distribution)
(이항 분포 -> 베타 분포 / 다항 분포 -> 디리클레 분포)
1) 단순 Count 기반 문서-단어 행렬 생성
2) 토픽의 개수 설정
3) 각 단어들을 임의의 주제를 최초로 할당 후 문서별 토픽 분포와 토픽별 단어 분포가 결정됨
4) 특정 단어를 하나 추출하고, 해당 단어를 제외하고 문서의 토픽 분포와 토픽별 단어 분포를 재 계산. 추출된 단어는 새롭게 토픽 할당 분포 계산
5) 다른 단어를 추출하고 (4)를 다시 수행. 모든 단어들의 토픽 할당 분포를 재 계산
6) 지정된 반복 횟수만큼 (4~5)를 수행하면서 모든 단어들의 토픽 할당 분포가 변경되지 않고 수렴될 때까지 수행.

단점 : 
추출된 토픽은 다시 사람의 주관적인 해석이 필요함
초기화 파라미터(토픽 개수, 알파, 베타) 및 Document-Term 행렬의 단어 필터링 최적화가 어려움

사이킷런 LatentDirichletAllocation 클래스 제공
-n_components : 토픽 갯수
-doc_topic_prior : 알파(문서의 토픽 분포 세타의 초기 하이퍼 파라미터)
-topic_word_prior : 베타(토픽의 단어 분포 피(phi)의 초기 하이퍼 파라미터)
-max_iter : 반복 횟수
